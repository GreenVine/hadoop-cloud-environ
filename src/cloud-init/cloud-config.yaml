#cloud-config

## Package Updates ##
package_update: true
package_upgrade: true

## Package Installation ##
apt_sources:
  - source: "ppa:webupd8team/java"

packages:
  - jq
  - awscli
  - zookeeperd
  - oracle-java8-installer
  - oracle-java8-set-default
  - python3-pip
  - libxml2-utils
  - unattended-upgrades

## Service Users ##
groups:
  - hduser
  - hbase

users:
  - default
  - name: hduser
    gecos: Hadoop Service Account
    primary-group: hduser
    groups: [zookeeper]

## File System ##
mounts:
  - [ "/dev/nvme1n1p1", "/data", "ext4", "defaults,nofail", "0", "2" ]

## Swap Space ##
swap:
  filename: /mnt/swap
  size: auto

## Boot Commands ##
bootcmd:
  # Temporarily prevent cloud-init from upgrading: https://bugs.launchpad.net/cloud-init/+bug/1798189
  - apt-mark hold cloud-init

  # Accept Oracle license
  - cloud-init-per once accepted-oracle-license-v1-1 echo "oracle-java8-installer shared/accepted-oracle-license-v1-1 select true" | debconf-set-selections

## Post-boot Commands ##
runcmd:
  # Environment variables
  - export TEMP_WORKDIR=/opt/cloud-init/tmp
  - export DEPLOY_SPEC="$TEMP_WORKDIR/deployment.json"

  # Create temp work dir
  - mkdir -p "$TEMP_WORKDIR"

  # Export instance data as environment variables
  - jq -r '.v1 | with_entries( if .key | contains("-") then .key |= sub("-";"_") else . end) | to_entries | .[] | .key |= ascii_upcase | "export " + .key + "=" + .value' /run/cloud-init/instance-data.json > "$TEMP_WORKDIR/instance_data"
  - . $TEMP_WORKDIR/instance_data

  # Export configured instance tags as environment variable
  - aws ec2 describe-tags --region "$REGION" --filter "Name=resource-id,Values=$INSTANCE_ID" --query "Tags[]" | jq -r '.[] | select(.Key | contains("-") | not) | .Key |= ascii_upcase | "export " + .Key + "=" + .Value' > "$TEMP_WORKDIR/ec2_tags"
  - . $TEMP_WORKDIR/ec2_tags

  # Deployment spec
  - curl -s "$DEPLOY_SPEC_URL" > "$DEPLOY_SPEC"
  - export ASSET_URL=$(jq -r '.config.deployment.locator.asset_base_url' "$DEPLOY_SPEC")

  # Bootstrap
  - curl -sf "$ASSET_URL/installers/bootstrapper.sh" | bash

## Final Message ##
final_message: 'OK: System initialisation is completed after $UPTIME seconds'

## Reboot after Completion ##
power_state:
  delay: "+1"
  mode: reboot
  message: System will reboot shortly to apply updates
  timeout: 30
  condition: True
