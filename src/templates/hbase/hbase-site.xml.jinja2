<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!--
/**
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
-->

<configuration>
  {% if variable and nodes %}
    {% set master_replicas = nodes | selectattr('server_role', 'equalto', 'master') | list %}

    {% if master_replicas %}
      {% set first_master = master_replicas[0] %}

        <!-- HRegionServers shared directory -->
        <property>
          <name>hbase.rootdir</name>
          <value>hdfs://{{ first_master.server_name }}.{{ discovery.dns.dns_suffix }}:{{ variable.hbase_port }}/hbase</value>
        </property>

        <!-- HMaster host -->
        <property>
          <name>hbase.master</name>
          <value>hdfs://{{ first_master.server_name }}.{{ discovery.dns.dns_suffix }}:{{ variable.hbase_master_port }}</value>
        </property>

    {% endif %}

    <!-- ZooKeeper quorum -->
    <property>
      <name>hbase.zookeeper.quorum</name>
      <value>{% for node in nodes %}{{ node.server_name }}.{{ discovery.dns.dns_suffix }}:{{ variable.zookeeper_quorum_port }}{{ ',' if not loop.last }}{% endfor %}</value>
    </property>

    <!-- ZooKepper cluster port -->
    <property>
      <name>hbase.zookeeper.property.clientPort</name>
      <value>{{ variable.zookeeper_quorum_port }}</value>
    </property>

    {% if static %}
      {% for entry in static %}
        <property>
        {% for k, v in entry.items() %}
          {% if not k.startswith('__') %}
            <{{ k }}>{{ v }}</{{ k }}>
          {% endif %}
        {% endfor %}
        </property>
      {% endfor %}
    {% endif %}

  {% endif %}
</configuration>
